apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: pff
spec:
  replicas: 1
  selector:
    matchLabels: { app: mysql }
  template:
    metadata:
      labels: { app: mysql }
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_USER
              value: "root"
            - name: MYSQL_DATABASE
              value: "pff"
          livenessProbe:
            exec: { command: ["mysqladmin","ping","-p${MYSQL_ROOT_PASSWORD}"] }
            periodSeconds: 10
          readinessProbe:
            exec: { command: ["mysqladmin","ping","-p${MYSQL_ROOT_PASSWORD}"] }
            periodSeconds: 10
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: pff
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: pff
spec:
  type: ClusterIP
  selector: { app: mysql }
  ports:
    - port: 3306
      targetPort: 3306
